@@ -6260,149 +6260,181 @@
 SharedFromThis%3cFStaticLightingManager%3e%0a%7b%0apublic:%0a%09
+UNREALED_API // Extensibility+%0a%09
 static TSharedPtr%3cFStaticLightingManager%3e Get();%0a
-
 %0a%09/** Processes lighting data that is now pending 
@@ -7021,100 +7021,201 @@
 ortRequested();%0a%09static void DiscardRequested();%0a%0a
+%09UNREALED_API void LaunchCustomSystem(class FStaticLightingSystem* CustomSystem); // Extensibility+%0a%0a
 %09/** Initializes the static lighting system to def
@@ -8879,100 +8879,127 @@
 s, UWorld* InWorld, ULevel* InLightingScenario);%0a%09
+virtual // Extensibility+%0a%09
 ~FStaticLightingSystem();%0a%0a%09bool CheckLightmassExe
@@ -10089,108 +10089,160 @@
  == LightingScenario) && InLevel-%3ebIsVisible;%0a%09%7d%0a%0a
+// 
 private:
+ // Extensibility+-%0aprotected: // Extensibility+%0a
 %09/**%0a%09 * Generates mappings/meshes for all BSP in 
@@ -11019,100 +11019,140 @@
 ssor structure for handling import and export */%0a%09
+UNREALED_API virtual // Extensibility+%0a%09
 bool CreateLightmassProcessor();%0a%0a%09/** Collects th
@@ -11515,100 +11515,250 @@
 tryForLighting, bool bForceNoPrecomputedLighting);
+%0a%0a%09virtual bool CustomizePrimitiveInfo(UPrimitiveComponent* Primitive, FStaticLightingPrimitiveInfo& PrimitiveInfo) %7b return true; %7d // Extensibility+
 %0a%09%0a%09/** After importing, textures need to be encod
@@ -12853,108 +12853,131 @@
 erBuildDataResourcesToKeep(const ULevel* Level);%0a%0a
+// 
 private:
+ // Extensibility+-%0a
 %0a%09/** The lights in the world which the system is 
@@ -15015,149 +15015,209 @@
 essor that actually interfacets with Lightmass */%0a
-
 %09class FLightmassProcessor* LightmassProcessor;%0a%0a
+%09bool bForceAllowStaticLighting = false; // Extensibility+%0a%0a
 %09friend FStaticLightingManager;%0a%09friend FLightmass
