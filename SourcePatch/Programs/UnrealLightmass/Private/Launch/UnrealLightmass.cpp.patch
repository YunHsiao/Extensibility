@@ -1599,529 +1599,578 @@
 le%0a%09GLog-%3eAddOutputDevice( FLightmassLog::Get() );%0a%0a%09// Initialize FCommandLine%0a%09InitCommandLine(argc, argv);%0a%0a%09// Output devices.%0a%09GError = FPlatformApplicationMisc::GetErrorOutputDevice(); %0a%09GWarn = FPlatformApplicationMisc::GetFeedbackContext();%0a%0a
-#if USE_LOCAL_SWARM_INTERFACE
+// #if USE_LOCAL_SWARM_INTERFACE // @CrysknifeCT(-)%0a%0a
+#if 1 // @CrysknifeCT()%0a%0a
 %09bool bMessagingMode = false;%0a%09FString CommandLine = FCommandLine::Get();%0a%09if (USE_LOCAL_SWARM_INTERFACE && !FParse::Param(*CommandLine, TEXT(%22-Messaging%22)))%0a%09%7b%0a%09%09bMessagingMode = true;%0a%09%09CommandLine += TEXT(%22 -Messaging%22);%0a%09%7d%0a%0a%09// Don't spew all log
@@ -2295,566 +2297,688 @@
 ut%22)))%0a%09%7b%0a%09%09CommandLine += TEXT(%22 -nostdout%22);%0a%09%7d%0a%0a%09GEngineLoop.PreInit(*CommandLine);%0a%0a%09// Tell the module manager is may now process newly-loaded UObjects when new C++ modules are loaded%0a%09FModuleManager::Get().StartProcessingNewlyLoadedObjects();%0a%0a
-%09FModuleManager::LoadModuleChecked%3cIMessagingModule%3e(%22Messaging%22);
+%09// FModuleManager::LoadModuleChecked%3cIMessagingModule%3e(%22Messaging%22); // @CrysknifeCT(-)%0a%0a
+%09if (USE_LOCAL_SWARM_INTERFACE) FModuleManager::Get().LoadModule(%22Messaging%22); // @CrysknifeCT()%0a%0a
 %09FModuleManager::Get().LoadModule(TEXT(%22Settings%22));%0a%09IPluginManager::Get().LoadModulesForEnabledPlugins(ELoadingPhase::PreDefault);%0a%09IPluginManager::Get().LoadModulesForEnabledPlugins(ELoadingPhase::PostDefault);%0a%0a%09ON_SCOPE_EXIT%0a%09%7b%0a%09%09FEngineLoop::Ap
